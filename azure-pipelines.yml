trigger:
- main

variables:
  buildConfiguration: 'Release'
  poolName: 'New_test_pool'
  artifactName: 'dacpacdrop'
  databaseNames: 'Bank,Time,AnotherDB'  # List of databases
  databaseLoginId: 'ETL_SQL_Admin'
  databasePassword: 'YourPassword'  # Replace with your actual password

pool: $(poolName)

stages:
- stage: STAGE_Build
  displayName: 'Build DACPAC'
  jobs:
  - job: JOB_VSBuildSQLProject
    displayName: 'Build'    
    steps:
    - task: VSBuild@1
      displayName: 'Build SQL Project to Produce Dacpac'
      inputs:    
        solution: '$(Build.Repository.LocalPath)\MyDatabaseProject\MyDatabaseProject.sln'  # Adjust the path to your solution
        platform: 'Any CPU'
        configuration: $(buildConfiguration)
    - task: CopyFiles@2
      displayName: 'Copy Dacpac to staging directory'
      inputs:
        SourceFolder: '$(Build.Repository.LocalPath)'
        Contents: '**\*.dacpac'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Dacpac Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: $(artifactName)
        publishLocation: 'Container'

- stage: STAGE_DeployDEV
  displayName: 'DeployDev'
  dependsOn: 'STAGE_Build'
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))
  jobs: 
    - deployment: DEPLOY_SqlDev
      displayName: 'Deploy SQL to Dev'
      environment: AzureDevSQL
      strategy: 
        runOnce:
          deploy:      
            steps:
            - script: |
                databases=$(databaseNames)
                for db in ${databases//,/ }
                do
                  echo "Deploying to database: $db"
                  az sql db deploy \
                    --name $db \
                    --login $databaseLoginId \
                    --password $databasePassword \
                    --dacpac $(Pipeline.Workspace)/$(artifactName)/MyDatabaseProject/bin/Release/MyDatabaseProject.dacpac  # Adjust the path to your dacpac
                done
              displayName: 'Deploy DACPAC to each database'
